//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CCEJobs {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AtefDataSet11")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AtefDataSet11 : global::System.Data.DataSet {
        
        private tblBidBondDataTable tabletblBidBond;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AtefDataSet11() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected AtefDataSet11(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblBidBond"] != null)) {
                    base.Tables.Add(new tblBidBondDataTable(ds.Tables["tblBidBond"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblBidBondDataTable tblBidBond {
            get {
                return this.tabletblBidBond;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            AtefDataSet11 cln = ((AtefDataSet11)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tblBidBond"] != null)) {
                    base.Tables.Add(new tblBidBondDataTable(ds.Tables["tblBidBond"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletblBidBond = ((tblBidBondDataTable)(base.Tables["tblBidBond"]));
            if ((initTable == true)) {
                if ((this.tabletblBidBond != null)) {
                    this.tabletblBidBond.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "AtefDataSet11";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AtefDataSet11.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletblBidBond = new tblBidBondDataTable();
            base.Tables.Add(this.tabletblBidBond);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblBidBond() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AtefDataSet11 ds = new AtefDataSet11();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tblBidBondRowChangeEventHandler(object sender, tblBidBondRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblBidBondDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEstimateNumber;
            
            private global::System.Data.DataColumn columnJobNumber;
            
            private global::System.Data.DataColumn columnJobName;
            
            private global::System.Data.DataColumn columnProjectManager;
            
            private global::System.Data.DataColumn columnEstimator;
            
            private global::System.Data.DataColumn columnSuperintendent;
            
            private global::System.Data.DataColumn columnBillingRep;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnApprovedAmount;
            
            private global::System.Data.DataColumn columnJobCostCodeType;
            
            private global::System.Data.DataColumn columnJobCostCodePhase;
            
            private global::System.Data.DataColumn columnCostCode;
            
            private global::System.Data.DataColumn columnCostCodeDescription;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnHours;
            
            private global::System.Data.DataColumn columnCost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBidBondDataTable() {
                this.TableName = "tblBidBond";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblBidBondDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblBidBondDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimateNumberColumn {
                get {
                    return this.columnEstimateNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobNumberColumn {
                get {
                    return this.columnJobNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobNameColumn {
                get {
                    return this.columnJobName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectManagerColumn {
                get {
                    return this.columnProjectManager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimatorColumn {
                get {
                    return this.columnEstimator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuperintendentColumn {
                get {
                    return this.columnSuperintendent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillingRepColumn {
                get {
                    return this.columnBillingRep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovedAmountColumn {
                get {
                    return this.columnApprovedAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobCostCodeTypeColumn {
                get {
                    return this.columnJobCostCodeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobCostCodePhaseColumn {
                get {
                    return this.columnJobCostCodePhase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostCodeColumn {
                get {
                    return this.columnCostCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostCodeDescriptionColumn {
                get {
                    return this.columnCostCodeDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoursColumn {
                get {
                    return this.columnHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBidBondRow this[int index] {
                get {
                    return ((tblBidBondRow)(this.Rows[index]));
                }
            }
            
            public event tblBidBondRowChangeEventHandler tblBidBondRowChanging;
            
            public event tblBidBondRowChangeEventHandler tblBidBondRowChanged;
            
            public event tblBidBondRowChangeEventHandler tblBidBondRowDeleting;
            
            public event tblBidBondRowChangeEventHandler tblBidBondRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblBidBondRow(tblBidBondRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBidBondRow AddtblBidBondRow(
                        string EstimateNumber, 
                        string JobNumber, 
                        string JobName, 
                        string ProjectManager, 
                        string Estimator, 
                        string Superintendent, 
                        string BillingRep, 
                        string CustomerName, 
                        decimal ApprovedAmount, 
                        string JobCostCodeType, 
                        string JobCostCodePhase, 
                        string CostCode, 
                        string CostCodeDescription, 
                        int Quantity, 
                        int Hours, 
                        decimal Cost) {
                tblBidBondRow rowtblBidBondRow = ((tblBidBondRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EstimateNumber,
                        JobNumber,
                        JobName,
                        ProjectManager,
                        Estimator,
                        Superintendent,
                        BillingRep,
                        CustomerName,
                        ApprovedAmount,
                        JobCostCodeType,
                        JobCostCodePhase,
                        CostCode,
                        CostCodeDescription,
                        Quantity,
                        Hours,
                        Cost};
                rowtblBidBondRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblBidBondRow);
                return rowtblBidBondRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblBidBondDataTable cln = ((tblBidBondDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblBidBondDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstimateNumber = base.Columns["EstimateNumber"];
                this.columnJobNumber = base.Columns["JobNumber"];
                this.columnJobName = base.Columns["JobName"];
                this.columnProjectManager = base.Columns["ProjectManager"];
                this.columnEstimator = base.Columns["Estimator"];
                this.columnSuperintendent = base.Columns["Superintendent"];
                this.columnBillingRep = base.Columns["BillingRep"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnApprovedAmount = base.Columns["ApprovedAmount"];
                this.columnJobCostCodeType = base.Columns["JobCostCodeType"];
                this.columnJobCostCodePhase = base.Columns["JobCostCodePhase"];
                this.columnCostCode = base.Columns["CostCode"];
                this.columnCostCodeDescription = base.Columns["CostCodeDescription"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnHours = base.Columns["Hours"];
                this.columnCost = base.Columns["Cost"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstimateNumber = new global::System.Data.DataColumn("EstimateNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateNumber);
                this.columnJobNumber = new global::System.Data.DataColumn("JobNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobNumber);
                this.columnJobName = new global::System.Data.DataColumn("JobName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobName);
                this.columnProjectManager = new global::System.Data.DataColumn("ProjectManager", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectManager);
                this.columnEstimator = new global::System.Data.DataColumn("Estimator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimator);
                this.columnSuperintendent = new global::System.Data.DataColumn("Superintendent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuperintendent);
                this.columnBillingRep = new global::System.Data.DataColumn("BillingRep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingRep);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnApprovedAmount = new global::System.Data.DataColumn("ApprovedAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedAmount);
                this.columnJobCostCodeType = new global::System.Data.DataColumn("JobCostCodeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCostCodeType);
                this.columnJobCostCodePhase = new global::System.Data.DataColumn("JobCostCodePhase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCostCodePhase);
                this.columnCostCode = new global::System.Data.DataColumn("CostCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCode);
                this.columnCostCodeDescription = new global::System.Data.DataColumn("CostCodeDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCodeDescription);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnHours = new global::System.Data.DataColumn("Hours", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHours);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnEstimateNumber.MaxLength = 10;
                this.columnJobNumber.MaxLength = 10;
                this.columnJobName.MaxLength = 50;
                this.columnProjectManager.MaxLength = 50;
                this.columnEstimator.MaxLength = 50;
                this.columnSuperintendent.MaxLength = 50;
                this.columnBillingRep.MaxLength = 50;
                this.columnCustomerName.MaxLength = 50;
                this.columnApprovedAmount.ReadOnly = true;
                this.columnJobCostCodeType.MaxLength = 1;
                this.columnJobCostCodePhase.MaxLength = 3;
                this.columnCostCode.MaxLength = 3;
                this.columnCostCodeDescription.MaxLength = 255;
                this.columnQuantity.ReadOnly = true;
                this.columnHours.ReadOnly = true;
                this.columnCost.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBidBondRow NewtblBidBondRow() {
                return ((tblBidBondRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblBidBondRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblBidBondRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblBidBondRowChanged != null)) {
                    this.tblBidBondRowChanged(this, new tblBidBondRowChangeEvent(((tblBidBondRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblBidBondRowChanging != null)) {
                    this.tblBidBondRowChanging(this, new tblBidBondRowChangeEvent(((tblBidBondRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblBidBondRowDeleted != null)) {
                    this.tblBidBondRowDeleted(this, new tblBidBondRowChangeEvent(((tblBidBondRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblBidBondRowDeleting != null)) {
                    this.tblBidBondRowDeleting(this, new tblBidBondRowChangeEvent(((tblBidBondRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblBidBondRow(tblBidBondRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AtefDataSet11 ds = new AtefDataSet11();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblBidBondDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblBidBondRow : global::System.Data.DataRow {
            
            private tblBidBondDataTable tabletblBidBond;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblBidBondRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblBidBond = ((tblBidBondDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EstimateNumber {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.EstimateNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateNumber\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.EstimateNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobNumber {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.JobNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobNumber\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.JobNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobName {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.JobNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobName\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.JobNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectManager {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.ProjectManagerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectManager\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.ProjectManagerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Estimator {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.EstimatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Estimator\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.EstimatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Superintendent {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.SuperintendentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Superintendent\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.SuperintendentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillingRep {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.BillingRepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingRep\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.BillingRepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ApprovedAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblBidBond.ApprovedAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedAmount\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.ApprovedAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobCostCodeType {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.JobCostCodeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobCostCodeType\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.JobCostCodeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobCostCodePhase {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.JobCostCodePhaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobCostCodePhase\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.JobCostCodePhaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CostCode {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.CostCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostCode\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.CostCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CostCodeDescription {
                get {
                    try {
                        return ((string)(this[this.tabletblBidBond.CostCodeDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostCodeDescription\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.CostCodeDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tabletblBidBond.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Hours {
                get {
                    try {
                        return ((int)(this[this.tabletblBidBond.HoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hours\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.HoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cost {
                get {
                    try {
                        return ((decimal)(this[this.tabletblBidBond.CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cost\' in table \'tblBidBond\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBidBond.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimateNumberNull() {
                return this.IsNull(this.tabletblBidBond.EstimateNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimateNumberNull() {
                this[this.tabletblBidBond.EstimateNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobNumberNull() {
                return this.IsNull(this.tabletblBidBond.JobNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobNumberNull() {
                this[this.tabletblBidBond.JobNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobNameNull() {
                return this.IsNull(this.tabletblBidBond.JobNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobNameNull() {
                this[this.tabletblBidBond.JobNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectManagerNull() {
                return this.IsNull(this.tabletblBidBond.ProjectManagerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectManagerNull() {
                this[this.tabletblBidBond.ProjectManagerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimatorNull() {
                return this.IsNull(this.tabletblBidBond.EstimatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimatorNull() {
                this[this.tabletblBidBond.EstimatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuperintendentNull() {
                return this.IsNull(this.tabletblBidBond.SuperintendentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuperintendentNull() {
                this[this.tabletblBidBond.SuperintendentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillingRepNull() {
                return this.IsNull(this.tabletblBidBond.BillingRepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillingRepNull() {
                this[this.tabletblBidBond.BillingRepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tabletblBidBond.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tabletblBidBond.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedAmountNull() {
                return this.IsNull(this.tabletblBidBond.ApprovedAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedAmountNull() {
                this[this.tabletblBidBond.ApprovedAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobCostCodeTypeNull() {
                return this.IsNull(this.tabletblBidBond.JobCostCodeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobCostCodeTypeNull() {
                this[this.tabletblBidBond.JobCostCodeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobCostCodePhaseNull() {
                return this.IsNull(this.tabletblBidBond.JobCostCodePhaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobCostCodePhaseNull() {
                this[this.tabletblBidBond.JobCostCodePhaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostCodeNull() {
                return this.IsNull(this.tabletblBidBond.CostCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostCodeNull() {
                this[this.tabletblBidBond.CostCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostCodeDescriptionNull() {
                return this.IsNull(this.tabletblBidBond.CostCodeDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostCodeDescriptionNull() {
                this[this.tabletblBidBond.CostCodeDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tabletblBidBond.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tabletblBidBond.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoursNull() {
                return this.IsNull(this.tabletblBidBond.HoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoursNull() {
                this[this.tabletblBidBond.HoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostNull() {
                return this.IsNull(this.tabletblBidBond.CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostNull() {
                this[this.tabletblBidBond.CostColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblBidBondRowChangeEvent : global::System.EventArgs {
            
            private tblBidBondRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBidBondRowChangeEvent(tblBidBondRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBidBondRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace CCEJobs.AtefDataSet11TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblBidBondTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblBidBondTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblBidBond";
            tableMapping.ColumnMappings.Add("EstimateNumber", "EstimateNumber");
            tableMapping.ColumnMappings.Add("JobNumber", "JobNumber");
            tableMapping.ColumnMappings.Add("JobName", "JobName");
            tableMapping.ColumnMappings.Add("ProjectManager", "ProjectManager");
            tableMapping.ColumnMappings.Add("Estimator", "Estimator");
            tableMapping.ColumnMappings.Add("Superintendent", "Superintendent");
            tableMapping.ColumnMappings.Add("BillingRep", "BillingRep");
            tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
            tableMapping.ColumnMappings.Add("ApprovedAmount", "ApprovedAmount");
            tableMapping.ColumnMappings.Add("JobCostCodeType", "JobCostCodeType");
            tableMapping.ColumnMappings.Add("JobCostCodePhase", "JobCostCodePhase");
            tableMapping.ColumnMappings.Add("CostCode", "CostCode");
            tableMapping.ColumnMappings.Add("CostCodeDescription", "CostCodeDescription");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Hours", "Hours");
            tableMapping.ColumnMappings.Add("Cost", "Cost");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CCEJobs.Properties.Settings.Default.CostCodeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = " SELECT \t\r\n\t                 EstimateNumber, \r\n\t                 JobNumber, \r\n\t  " +
                "               JobName, \r\n\t                 m.Description As [ProjectManager], \r" +
                "\n\t                 e.Description As [Estimator], \r\n\t                 s.Descripti" +
                "on AS [Superintendent], \r\n\t                 BillingRep,\r\n\t                 Name " +
                "AS [CustomerName], \r\n   \t                 ApprovedAmount = \r\n      \t            " +
                "   CASE JobChangeOrderApprovedAmount \r\n         \t         WHEN 0 THEN JobChangeO" +
                "rderRequestedAmount \r\n         \t         ELSE JobChangeOrderApprovedAmount \r\n   " +
                "   \t             END, \r\n\t                 JobCostCodeType, \r\n\t                 J" +
                "obCostCodePhase, \r\n\t                 CostCode, \r\n\t                 d.Description" +
                " AS [CostCodeDescription], \r\n                     ISNULL(Quantity, 0) AS Quantit" +
                "y, \r\n\t                 ISNULL(Hours,0) AS Hours, \r\n       \t             ISNULL(d" +
                ".Cost, 0) AS Cost                   \r\n                     FROM tblJob j \r\n     " +
                "                LEFT JOIN tblProjectManager m \r\n                     ON j.Projec" +
                "tManagerID = m.ProjectManagerID \r\n                     LEFT JOIN tblEstimator e " +
                "\r\n                     ON j.EstimatorID = e.EstimatorID \r\n                     L" +
                "EFT JOIN tblSuperintendent s \r\n                     ON j.SuperintendentID = s.Su" +
                "perintendentID \r\n                     LEFT JOIN tblJobChangeOrder C \r\n          " +
                "           ON j.JobID = c.JobID \r\n                     LEFT JOIN tblCustomer u \r" +
                "\n                     ON j.CustomerID = u.CustomerID \r\n                     LEFT" +
                " JOIN tblJobCostCode d \r\n                     ON c.JobChangeOrderID = d.JobChang" +
                "eOrderID \r\n                     LEFT JOIN tblJobCostCodePhase p \r\n              " +
                "       ON d.JobCostCodePhaseID = p.JobCostCodePhaseID \r\n                     WHE" +
                "RE c.JobChangeOrderID = 0";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AtefDataSet11.tblBidBondDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AtefDataSet11.tblBidBondDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AtefDataSet11.tblBidBondDataTable dataTable = new AtefDataSet11.tblBidBondDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591